import unittest
from sanskrit_transliteration import transliterate


class TestCases(unittest.TestCase):
    def test_vel_to_wx(self):
        self.assertEqual(
            transliterate(
                text='"n',
                from_scheme="VELTHIUS",
                to_scheme="WX"
            ),
            "f"
        )
        self.assertEqual(
            transliterate(
                text='a"nga.h',
                from_scheme="VELTHIUS",
                to_scheme="WX"
            ),
            "afgaH"
        )
        self.assertEqual(
            transliterate(
                text="j~naanam",
                from_scheme="VELTHIUS",
                to_scheme="WX"
            ),
            "jFAnam"
        )
        self.assertEqual(
            transliterate(
                text=".rr.si.h",
                from_scheme="VELTHIUS",
                to_scheme="WX"
            ),
            "QRiH"
        )
        self.assertEqual(
            transliterate(
                text="..r.si.h",
                from_scheme="VELTHIUS",
                to_scheme="WX"
            ),
            ".qRiH"
        )
        self.assertEqual(
            transliterate(
                "raama.h iva, 123.",
                from_scheme="VELTHIUS",
                to_scheme="WX"
            ),
            "rAmaH iva, 123."
        )
        self.assertEqual(
            transliterate(
                text="ka.n.thakam",
                from_scheme="VELTHIUS",
                to_scheme="WX"
            ),
            "kaNTakam"
        )
        self.assertEqual(
            transliterate(
                "paarthaaya pratibodhitaa.m bhagavataa naaraaya.nena svayam vyaasena grathitaa.m puraa.namuninaa madhye mahaabhaarate",
                from_scheme="VELTHIUS",
                to_scheme="WX"
            ),
            "pArWAya prawiboXiwAM BagavawA nArAyaNena svayam vyAsena graWiwAM purANamuninA maXye mahABArawe"
        )
        self.assertEqual(
            transliterate(
                text='.dhu.n.dhikaa.api"s',
                from_scheme="VELTHIUS",
                to_scheme="WX"
            ),
            "DuNDikAZpiS"
        )
        self.assertEqual(
            transliterate(
                "auau",
                from_scheme="VELTHIUS",
                to_scheme="WX"
            ),
            "OO"
        )
        self.assertEqual(
            transliterate(
                text="hara hara mahaadeva",
                from_scheme="VELTHIUS",
                to_scheme="WX"
            ),
            "hara hara mahAxeva"
        )
        self.assertEqual(
            transliterate(
                text="dugdha",
                from_scheme="VELTHIUS",
                to_scheme="WX"
            ),
            "xugXa"
        )
        self.assertEqual(
            transliterate(
                text="ataeva",
                from_scheme="VELTHIUS",
                to_scheme="WX"
            ),
            "awaeva"
        )
        self.assertEqual(
            transliterate(
                text="pit.rr.naam k.rte",
                from_scheme="VELTHIUS",
                to_scheme="WX"
            ),
            "piwQNAm kqwe"
        )
        self.assertEqual(
            transliterate(
                text="..k.r.s.na.m, vande. jagadgurum",
                from_scheme="VELTHIUS",
                to_scheme="WX"
            ),
            "..kqRNaM, vanxe. jagaxgurum"
        )
        self.assertEqual(
            transliterate(
                text="kar.na.h",
                from_scheme="VELTHIUS",
                to_scheme="WX"
            ),
            "karNaH"
        )
        self.assertEqual(
            transliterate(
                text="ahi.msaa",
                from_scheme="VELTHIUS",
                to_scheme="WX"
            ),
            "ahiMsA"
        )

    def test_wx_to_vel(self):
        self.assertEqual(
            transliterate(
                text="f",
                from_scheme="WX",
                to_scheme="VELTHIUS"
            ),
            '"n'
        )
        self.assertEqual(
            transliterate(
                text="afgaH",
                from_scheme="WX",
                to_scheme="VELTHIUS"
            ),
            'a"nga.h'
        )
        self.assertEqual(
            transliterate(
                text="jFAnam",
                from_scheme="WX",
                to_scheme="VELTHIUS"
            ),
            "j~naanam"
        )
        self.assertEqual(
            transliterate(
                text="qRiH",
                from_scheme="WX",
                to_scheme="VELTHIUS"
            ),
            ".r.si.h"
        )
        self.assertEqual(
            transliterate(
                text=".qRiH",
                from_scheme="WX",
                to_scheme="VELTHIUS"
            ),
            "..r.si.h"
        )
        self.assertEqual(
            transliterate(
                text="rAmaH iva, 123.",
                from_scheme="WX",
                to_scheme="VELTHIUS"
            ),
            "raama.h iva, 123."
        )
        self.assertEqual(
            transliterate(
                text="pArWAya prawiboXiwAM BagavawA nArAyaNena svayam vyAsena graWiwAM purANamuninA maXye mahABArawe",
                from_scheme="WX",
                to_scheme="VELTHIUS"
            ),
            "paarthaaya pratibodhitaa.m bhagavataa naaraaya.nena svayam vyaasena grathitaa.m puraa.namuninaa madhye mahaabhaarate"
        )
        self.assertEqual(
            transliterate(
                text="DuNDikAZpiS",
                from_scheme="WX",
                to_scheme="VELTHIUS"
            ),
            '.dhu.n.dhikaa.api"s'
        )
        self.assertEqual(
            transliterate(
                text="kaNTakam",
                from_scheme="WX",
                to_scheme="VELTHIUS"
            ),
            "ka.n.thakam"
        )
        self.assertEqual(
            transliterate(
                text="OO",
                from_scheme="WX",
                to_scheme="VELTHIUS"
            ),
            "auau"
        )
        self.assertEqual(
            transliterate(
                text="karNaH",
                from_scheme="WX",
                to_scheme="VELTHIUS"
            ),
            "kar.na.h"
        )
        self.assertEqual(
            transliterate(
                text="xugXam",
                from_scheme="WX",
                to_scheme="VELTHIUS"
            ),
            "dugdham"
        )
        self.assertEqual(
            transliterate(
                text="..OO..",
                from_scheme="WX",
                to_scheme="VELTHIUS"
            ),
            "..auau.."
        )
        self.assertEqual(
            transliterate(
                text="hara hara mahAxeva",
                from_scheme="WX",
                to_scheme="VELTHIUS"
            ),
            "hara hara mahaadeva"
        )
        self.assertEqual(
            transliterate(
                text="awaeva",
                from_scheme="WX",
                to_scheme="VELTHIUS"
            ),
            "ataeva"
        )
        self.assertEqual(
            transliterate(
                text="piwQNAm kqwe",
                from_scheme="WX",
                to_scheme="VELTHIUS"
            ),
            "pit.rr.naam k.rte"
        )
        self.assertEqual(
            transliterate(
                text="..kqRNaM, vanxe. jagaxgurum",
                from_scheme="WX",
                to_scheme="VELTHIUS"
            ),
            "..k.r.s.na.m, vande. jagadgurum"
        )
        self.assertEqual(
            transliterate(
                text="ahiMsA",
                from_scheme="WX",
                to_scheme="VELTHIUS"
            ),
            "ahi.msaa"
        )

    def test_vel_to_slp1(self):
        self.assertEqual(
            transliterate(
                text='"n',
                from_scheme="VELTHIUS",
                to_scheme="SLP1"
            ),
            "N"
        )
        self.assertEqual(
            transliterate(
                text='a"nga.h',
                from_scheme="VELTHIUS",
                to_scheme="SLP1",
            ),
            "aNgaH"
        )
        self.assertEqual(
            transliterate(
                text="j~naanam",
                from_scheme="VELTHIUS",
                to_scheme="SLP1",
            ),
            "jYAnam"
        )
        self.assertEqual(
            transliterate(
                text="raama.h iva, 123.",
                from_scheme="VELTHIUS",
                to_scheme="SLP1",
            ),
            "rAmaH iva, 123."
        )
        self.assertEqual(
            transliterate(
                text="paarthaaya pratibodhitaa.m bhagavataa naaraaya.nena svayam vyaasena grathitaa.m puraa.namuninaa madhye mahaabhaarate",
                from_scheme="VELTHIUS",
                to_scheme="SLP1"
            ),
            "pArTAya pratiboDitAM BagavatA nArAyaRena svayam vyAsena graTitAM purARamuninA maDye mahABArate"
        )
        self.assertEqual(
            transliterate(
                text='.dhu.n.dhikaa.api"s',
                from_scheme="VELTHIUS",
                to_scheme="SLP1"
            ),
            "QuRQikA'piS"
        )
        self.assertEqual(
            transliterate(
                text="auau",
                from_scheme="VELTHIUS",
                to_scheme="SLP1"
            ),
            "OO"
        )
        self.assertEqual(
            transliterate(
                text="kar.na.h",
                from_scheme="VELTHIUS",
                to_scheme="SLP1"
            ),
            "karRaH"
        )
        self.assertEqual(
            transliterate(
                text="dugdham",
                from_scheme="VELTHIUS",
                to_scheme="SLP1"
            ),
            "dugDam"
        )
        self.assertEqual(
            transliterate(
                text="auau",
                from_scheme="VELTHIUS",
                to_scheme="SLP1"
            ),
            "OO"
        )
        self.assertEqual(
            transliterate(
                text="hara hara mahaadeva",
                from_scheme="VELTHIUS",
                to_scheme="SLP1"
            ),
            "hara hara mahAdeva"
        )
        self.assertEqual(
            transliterate(
                text="ataeva",
                from_scheme="VELTHIUS",
                to_scheme="SLP1"
            ),
            "ataeva"
        )
        self.assertEqual(
            transliterate(
                text="pit.rr.naam k.rte",
                from_scheme="VELTHIUS",
                to_scheme="SLP1"
            ),
            "pitFRAm kfte"
        )
        self.assertEqual(
            transliterate(
                text="ka.n.thakam",
                from_scheme="VELTHIUS",
                to_scheme="SLP1"
            ),
            "kaRWakam"
        )
        self.assertEqual(
            transliterate(
                text="..k.r.s.na.m, vande. jagadgurum",
                from_scheme="VELTHIUS",
                to_scheme="SLP1"
            ),
            "..kfzRaM, vande. jagadgurum"
        )
        self.assertEqual(
            transliterate(
                text="ahi.msaa",
                from_scheme="VELTHIUS",
                to_scheme="SLP1"
            ),
            "ahiMsA"
        )
        self.assertEqual(
            transliterate(
                text=".r.si.h",
                from_scheme="VELTHIUS",
                to_scheme="SLP1"
            ),
            "fziH"
        )
        self.assertEqual(
            transliterate(
                text="..r.si.h",
                from_scheme="VELTHIUS",
                to_scheme="SLP1"
            ),
            ".fziH"
        )

    def test_slp1_to_vel(self):
        self.assertEqual(
            transliterate(
                text='N',
                from_scheme="SLP1",
                to_scheme="VELTHIUS"
            ),
            '"n'
        )
        self.assertEqual(
            transliterate(
                text='aNgaH',
                from_scheme="SLP1",
                to_scheme="VELTHIUS"
            ),
            'a"nga.h'
        )
        self.assertEqual(
            transliterate(
                text="jYAnam",
                from_scheme="SLP1",
                to_scheme="VELTHIUS"
            ),
            "j~naanam"
        )
        self.assertEqual(
            transliterate(
                text="rAmaH iva, 123.",
                from_scheme="SLP1",
                to_scheme="VELTHIUS"
            ),
            "raama.h iva, 123."
        )
        self.assertEqual(
            transliterate(
                text="pArTAya pratiboDitAM BagavatA nArAyaRena svayam vyAsena graTitAM purARamuninA maDye mahABArate",
                from_scheme="SLP1",
                to_scheme="VELTHIUS"
            ),
            "paarthaaya pratibodhitaa.m bhagavataa naaraaya.nena svayam vyaasena grathitaa.m puraa.namuninaa madhye mahaabhaarate"
        )
        self.assertEqual(
            transliterate(
                text="QuRQikA'piS",
                from_scheme="SLP1",
                to_scheme="VELTHIUS"
            ),
            '.dhu.n.dhikaa.api"s'
        )
        self.assertEqual(
            transliterate(
                text="OO",
                from_scheme="SLP1",
                to_scheme="VELTHIUS"
            ),
            "auau"
        )
        self.assertEqual(
            transliterate(
                text="karRaH",
                from_scheme="SLP1",
                to_scheme="VELTHIUS"
            ),
            "kar.na.h"
        )
        self.assertEqual(
            transliterate(
                text="dugDam",
                from_scheme="SLP1",
                to_scheme="VELTHIUS"
            ),
            "dugdham"
        )
        self.assertEqual(
            transliterate(
                text="..OO..",
                from_scheme="SLP1",
                to_scheme="VELTHIUS"
            ),
            "..auau.."
        )
        self.assertEqual(
            transliterate(
                text="hara hara mahAdeva",
                from_scheme="SLP1",
                to_scheme="VELTHIUS"
            ),
            "hara hara mahaadeva"
        )
        self.assertEqual(
            transliterate(
                text="ataeva",
                from_scheme="SLP1",
                to_scheme="VELTHIUS"
            ),
            "ataeva"
        )
        self.assertEqual(
            transliterate(
                text="pitFRAm kfte",
                from_scheme="SLP1",
                to_scheme="VELTHIUS"
            ),
            "pit.rr.naam k.rte"
        )
        self.assertEqual(
            transliterate(
                text="kaRWakam",
                from_scheme="SLP1",
                to_scheme="VELTHIUS"
            ),
            "ka.n.thakam"
        )
        self.assertEqual(
            transliterate(
                text="..kfzRaM, vande. jagadgurum",
                from_scheme="SLP1",
                to_scheme="VELTHIUS"
            ),
            "..k.r.s.na.m, vande. jagadgurum"
        )
        self.assertEqual(
            transliterate(
                text="ahiMsA",
                from_scheme="SLP1",
                to_scheme="VELTHIUS"
            ),
            "ahi.msaa"
        )
        self.assertEqual(
            transliterate(
                text="fziH",
                from_scheme="SLP1",
                to_scheme="VELTHIUS"
            ),
            ".r.si.h"
        )
        self.assertEqual(
            transliterate(
                text=".fziH",
                from_scheme="SLP1",
                to_scheme="VELTHIUS"
            ),
            "..r.si.h"
        )


if __name__ == '__main__':
    unittest.main()
